// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Lab9_CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Two integers
        /// </summary>
        public void Addition1()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '5' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Addition1Params.UITextBoxNum1EditText;

            // Type '2' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Addition1Params.UITextBoxNum2EditText;

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(84, 17));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(153, 16));
        }
        
        /// <summary>
        /// AssertAddition1 - Use 'AssertAddition1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddition1()
        {
            #region Variable Declarations
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Verify that the 'Text' property of 'textBoxResult' text box equals '7'
            Assert.AreEqual(this.AssertAddition1ExpectedValues.UITextBoxResultEditText, uITextBoxResultEdit.Text, "Something wrong with Addition");
        }
        
        /// <summary>
        /// Two integers
        /// </summary>
        public void Substraction1()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow1.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '4' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Substraction1Params.UITextBoxNum1EditText;

            // Type '8' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Substraction1Params.UITextBoxNum2EditText;

            // Click '-' button
            Mouse.Click(uIItemButton, new Point(48, 15));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(167, 13));
        }
        
        /// <summary>
        /// AssertSubstraction1 - Use 'AssertSubstraction1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSubstraction1()
        {
            #region Variable Declarations
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Verify that the 'Text' property of 'textBoxResult' text box equals '-4'
            Assert.AreEqual(this.AssertSubstraction1ExpectedValues.UITextBoxResultEditText, uITextBoxResultEdit.Text, "Something wrong with Substraction");
        }
        
        /// <summary>
        /// Multiply1 - Use 'Multiply1Params' to pass parameters into this method.
        /// </summary>
        public void Multiply1()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow2.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '10' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Multiply1Params.UITextBoxNum1EditText;

            // Type '3,5' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Multiply1Params.UITextBoxNum2EditText;

            // Click '*' button
            Mouse.Click(uIItemButton, new Point(58, 15));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(123, 20));
        }
        
        /// <summary>
        /// AssertMultiply1 - Use 'AssertMultiply1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMultiply1()
        {
            #region Variable Declarations
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Verify that the 'Text' property of 'textBoxResult' text box equals '35'
            Assert.AreEqual(this.AssertMultiply1ExpectedValues.UITextBoxResultEditText, uITextBoxResultEdit.Text, "Something wrong with Multiply");
        }
        
        /// <summary>
        /// Divine1 - Use 'Divine1Params' to pass parameters into this method.
        /// </summary>
        public void Divine1()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow3.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '10' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Divine1Params.UITextBoxNum1EditText;

            // Type '2,5' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Divine1Params.UITextBoxNum2EditText;

            // Click '/' button
            Mouse.Click(uIItemButton, new Point(25, 17));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(145, 18));
        }
        
        /// <summary>
        /// AssertDivine1 - Use 'AssertDivine1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDivine1()
        {
            #region Variable Declarations
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Verify that the 'Text' property of 'textBoxResult' text box equals '4'
            Assert.AreEqual(this.AssertDivine1ExpectedValues.UITextBoxResultEditText, uITextBoxResultEdit.Text, "Something wrong with Divi");
        }
        
        /// <summary>
        /// DivisionByZero - Use 'DivisionByZeroParams' to pass parameters into this method.
        /// </summary>
        public void DivisionByZero()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow3.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '3' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.DivisionByZeroParams.UITextBoxNum1EditText;

            // Type '0' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.DivisionByZeroParams.UITextBoxNum2EditText;

            // Click '/' button
            Mouse.Click(uIItemButton, new Point(80, 24));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(174, 13));
        }
        
        /// <summary>
        /// AssertDivisionByZero - Use 'AssertDivisionByZeroExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDivisionByZero()
        {
            #region Variable Declarations
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Verify that the 'Text' property of 'textBoxResult' text box equals '∞'
            Assert.AreEqual(this.AssertDivisionByZeroExpectedValues.UITextBoxResultEditText, uITextBoxResultEdit.Text);
        }
        
        /// <summary>
        /// Addition2 - Use 'Addition2Params' to pass parameters into this method.
        /// </summary>
        public void Addition2()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '4' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Addition2Params.UITextBoxNum1EditText;

            // Type '4k' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Addition2Params.UITextBoxNum2EditText;

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(101, 12));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(142, 13));
        }
        
        /// <summary>
        /// AssertError - Use 'AssertErrorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertError()
        {
            #region Variable Declarations
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Verify that the 'Text' property of 'textBoxResult' text box equals 'Błąd'
            Assert.AreEqual(this.AssertErrorExpectedValues.UITextBoxResultEditText, uITextBoxResultEdit.Text);
        }
        
        /// <summary>
        /// Addition3 - Use 'Addition3Params' to pass parameters into this method.
        /// </summary>
        public void Addition3()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type 'b' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Addition3Params.UITextBoxNum1EditText;

            // Type '7' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Addition3Params.UITextBoxNum2EditText;

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(82, 13));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(131, 13));
        }
        
        /// <summary>
        /// Substraction2 - Use 'Substraction2Params' to pass parameters into this method.
        /// </summary>
        public void Substraction2()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow1.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '6' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Substraction2Params.UITextBoxNum1EditText;

            // Type 'l' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Substraction2Params.UITextBoxNum2EditText;

            // Click '-' button
            Mouse.Click(uIItemButton, new Point(45, 13));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(129, 12));
        }
        
        /// <summary>
        /// Substraction3 - Use 'Substraction3Params' to pass parameters into this method.
        /// </summary>
        public void Substraction3()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow1.UIItemButton;
            #endregion

            // Type ';' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Substraction3Params.UITextBoxNum1EditText;

            // Type '4' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Substraction3Params.UITextBoxNum2EditText;

            // Click '-' button
            Mouse.Click(uIItemButton, new Point(34, 7));
        }
        
        /// <summary>
        /// Multiply2 - Use 'Multiply2Params' to pass parameters into this method.
        /// </summary>
        public void Multiply2()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow2.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '1qw' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Multiply2Params.UITextBoxNum1EditText;

            // Type '4' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Multiply2Params.UITextBoxNum2EditText;

            // Click '*' button
            Mouse.Click(uIItemButton, new Point(88, 14));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(125, 5));
        }
        
        /// <summary>
        /// Multiply3 - Use 'Multiply3Params' to pass parameters into this method.
        /// </summary>
        public void Multiply3()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow2.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '5' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Multiply3Params.UITextBoxNum1EditText;

            // Type 'g' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Multiply3Params.UITextBoxNum2EditText;

            // Click '*' button
            Mouse.Click(uIItemButton, new Point(81, 22));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(121, 3));
        }
        
        /// <summary>
        /// Division2 - Use 'Division2Params' to pass parameters into this method.
        /// </summary>
        public void Division2()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow3.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type '7' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Division2Params.UITextBoxNum1EditText;

            // Type 'l' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Division2Params.UITextBoxNum2EditText;

            // Click '/' button
            Mouse.Click(uIItemButton, new Point(59, 22));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(129, 14));
        }
        
        /// <summary>
        /// Division3 - Use 'Division3Params' to pass parameters into this method.
        /// </summary>
        public void Division3()
        {
            #region Variable Declarations
            WinEdit uITextBoxNum1Edit = this.UILab6Window.UITextBoxNum1Window.UITextBoxNum1Edit;
            WinEdit uITextBoxNum2Edit = this.UILab6Window.UITextBoxNum2Window.UITextBoxNum2Edit;
            WinButton uIItemButton = this.UILab6Window.UIItemWindow3.UIItemButton;
            WinEdit uITextBoxResultEdit = this.UILab6Window.UITextBoxResultWindow.UITextBoxResultEdit;
            #endregion

            // Type 'o' in 'textBoxNum1' text box
            uITextBoxNum1Edit.Text = this.Division3Params.UITextBoxNum1EditText;

            // Type '4' in 'textBoxNum2' text box
            uITextBoxNum2Edit.Text = this.Division3Params.UITextBoxNum2EditText;

            // Click '/' button
            Mouse.Click(uIItemButton, new Point(29, 23));

            // Click 'textBoxResult' text box
            Mouse.Click(uITextBoxResultEdit, new Point(123, 12));
        }
        
        #region Properties
        public virtual Addition1Params Addition1Params
        {
            get
            {
                if ((this.mAddition1Params == null))
                {
                    this.mAddition1Params = new Addition1Params();
                }
                return this.mAddition1Params;
            }
        }
        
        public virtual AssertAddition1ExpectedValues AssertAddition1ExpectedValues
        {
            get
            {
                if ((this.mAssertAddition1ExpectedValues == null))
                {
                    this.mAssertAddition1ExpectedValues = new AssertAddition1ExpectedValues();
                }
                return this.mAssertAddition1ExpectedValues;
            }
        }
        
        public virtual Substraction1Params Substraction1Params
        {
            get
            {
                if ((this.mSubstraction1Params == null))
                {
                    this.mSubstraction1Params = new Substraction1Params();
                }
                return this.mSubstraction1Params;
            }
        }
        
        public virtual AssertSubstraction1ExpectedValues AssertSubstraction1ExpectedValues
        {
            get
            {
                if ((this.mAssertSubstraction1ExpectedValues == null))
                {
                    this.mAssertSubstraction1ExpectedValues = new AssertSubstraction1ExpectedValues();
                }
                return this.mAssertSubstraction1ExpectedValues;
            }
        }
        
        public virtual Multiply1Params Multiply1Params
        {
            get
            {
                if ((this.mMultiply1Params == null))
                {
                    this.mMultiply1Params = new Multiply1Params();
                }
                return this.mMultiply1Params;
            }
        }
        
        public virtual AssertMultiply1ExpectedValues AssertMultiply1ExpectedValues
        {
            get
            {
                if ((this.mAssertMultiply1ExpectedValues == null))
                {
                    this.mAssertMultiply1ExpectedValues = new AssertMultiply1ExpectedValues();
                }
                return this.mAssertMultiply1ExpectedValues;
            }
        }
        
        public virtual Divine1Params Divine1Params
        {
            get
            {
                if ((this.mDivine1Params == null))
                {
                    this.mDivine1Params = new Divine1Params();
                }
                return this.mDivine1Params;
            }
        }
        
        public virtual AssertDivine1ExpectedValues AssertDivine1ExpectedValues
        {
            get
            {
                if ((this.mAssertDivine1ExpectedValues == null))
                {
                    this.mAssertDivine1ExpectedValues = new AssertDivine1ExpectedValues();
                }
                return this.mAssertDivine1ExpectedValues;
            }
        }
        
        public virtual DivisionByZeroParams DivisionByZeroParams
        {
            get
            {
                if ((this.mDivisionByZeroParams == null))
                {
                    this.mDivisionByZeroParams = new DivisionByZeroParams();
                }
                return this.mDivisionByZeroParams;
            }
        }
        
        public virtual AssertDivisionByZeroExpectedValues AssertDivisionByZeroExpectedValues
        {
            get
            {
                if ((this.mAssertDivisionByZeroExpectedValues == null))
                {
                    this.mAssertDivisionByZeroExpectedValues = new AssertDivisionByZeroExpectedValues();
                }
                return this.mAssertDivisionByZeroExpectedValues;
            }
        }
        
        public virtual Addition2Params Addition2Params
        {
            get
            {
                if ((this.mAddition2Params == null))
                {
                    this.mAddition2Params = new Addition2Params();
                }
                return this.mAddition2Params;
            }
        }
        
        public virtual AssertErrorExpectedValues AssertErrorExpectedValues
        {
            get
            {
                if ((this.mAssertErrorExpectedValues == null))
                {
                    this.mAssertErrorExpectedValues = new AssertErrorExpectedValues();
                }
                return this.mAssertErrorExpectedValues;
            }
        }
        
        public virtual Addition3Params Addition3Params
        {
            get
            {
                if ((this.mAddition3Params == null))
                {
                    this.mAddition3Params = new Addition3Params();
                }
                return this.mAddition3Params;
            }
        }
        
        public virtual Substraction2Params Substraction2Params
        {
            get
            {
                if ((this.mSubstraction2Params == null))
                {
                    this.mSubstraction2Params = new Substraction2Params();
                }
                return this.mSubstraction2Params;
            }
        }
        
        public virtual Substraction3Params Substraction3Params
        {
            get
            {
                if ((this.mSubstraction3Params == null))
                {
                    this.mSubstraction3Params = new Substraction3Params();
                }
                return this.mSubstraction3Params;
            }
        }
        
        public virtual Multiply2Params Multiply2Params
        {
            get
            {
                if ((this.mMultiply2Params == null))
                {
                    this.mMultiply2Params = new Multiply2Params();
                }
                return this.mMultiply2Params;
            }
        }
        
        public virtual Multiply3Params Multiply3Params
        {
            get
            {
                if ((this.mMultiply3Params == null))
                {
                    this.mMultiply3Params = new Multiply3Params();
                }
                return this.mMultiply3Params;
            }
        }
        
        public virtual Division2Params Division2Params
        {
            get
            {
                if ((this.mDivision2Params == null))
                {
                    this.mDivision2Params = new Division2Params();
                }
                return this.mDivision2Params;
            }
        }
        
        public virtual Division3Params Division3Params
        {
            get
            {
                if ((this.mDivision3Params == null))
                {
                    this.mDivision3Params = new Division3Params();
                }
                return this.mDivision3Params;
            }
        }
        
        public UILab6Window UILab6Window
        {
            get
            {
                if ((this.mUILab6Window == null))
                {
                    this.mUILab6Window = new UILab6Window();
                }
                return this.mUILab6Window;
            }
        }
        #endregion
        
        #region Fields
        private Addition1Params mAddition1Params;
        
        private AssertAddition1ExpectedValues mAssertAddition1ExpectedValues;
        
        private Substraction1Params mSubstraction1Params;
        
        private AssertSubstraction1ExpectedValues mAssertSubstraction1ExpectedValues;
        
        private Multiply1Params mMultiply1Params;
        
        private AssertMultiply1ExpectedValues mAssertMultiply1ExpectedValues;
        
        private Divine1Params mDivine1Params;
        
        private AssertDivine1ExpectedValues mAssertDivine1ExpectedValues;
        
        private DivisionByZeroParams mDivisionByZeroParams;
        
        private AssertDivisionByZeroExpectedValues mAssertDivisionByZeroExpectedValues;
        
        private Addition2Params mAddition2Params;
        
        private AssertErrorExpectedValues mAssertErrorExpectedValues;
        
        private Addition3Params mAddition3Params;
        
        private Substraction2Params mSubstraction2Params;
        
        private Substraction3Params mSubstraction3Params;
        
        private Multiply2Params mMultiply2Params;
        
        private Multiply3Params mMultiply3Params;
        
        private Division2Params mDivision2Params;
        
        private Division3Params mDivision3Params;
        
        private UILab6Window mUILab6Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Addition1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Addition1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '5' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "5";
        
        /// <summary>
        /// Type '2' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddition1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertAddition1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBoxResult' text box equals '7'
        /// </summary>
        public string UITextBoxResultEditText = "7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Substraction1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Substraction1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '4' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "4";
        
        /// <summary>
        /// Type '8' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSubstraction1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertSubstraction1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBoxResult' text box equals '-4'
        /// </summary>
        public string UITextBoxResultEditText = "-4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Multiply1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Multiply1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "10";
        
        /// <summary>
        /// Type '3,5' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "3,5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMultiply1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertMultiply1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBoxResult' text box equals '35'
        /// </summary>
        public string UITextBoxResultEditText = "35";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Divine1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Divine1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "10";
        
        /// <summary>
        /// Type '2,5' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "2,5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDivine1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertDivine1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBoxResult' text box equals '4'
        /// </summary>
        public string UITextBoxResultEditText = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DivisionByZero'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class DivisionByZeroParams
    {
        
        #region Fields
        /// <summary>
        /// Type '3' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "3";
        
        /// <summary>
        /// Type '0' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDivisionByZero'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertDivisionByZeroExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBoxResult' text box equals '∞'
        /// </summary>
        public string UITextBoxResultEditText = "∞";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Addition2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Addition2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '4' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "4";
        
        /// <summary>
        /// Type '4k' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "4k";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertError'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AssertErrorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBoxResult' text box equals 'Błąd'
        /// </summary>
        public string UITextBoxResultEditText = "Błąd";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Addition3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Addition3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'b' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "b";
        
        /// <summary>
        /// Type '7' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Substraction2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Substraction2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '6' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "6";
        
        /// <summary>
        /// Type 'l' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "l";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Substraction3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Substraction3Params
    {
        
        #region Fields
        /// <summary>
        /// Type ';' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = ";";
        
        /// <summary>
        /// Type '4' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Multiply2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Multiply2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1qw' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "1qw";
        
        /// <summary>
        /// Type '4' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Multiply3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Multiply3Params
    {
        
        #region Fields
        /// <summary>
        /// Type '5' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "5";
        
        /// <summary>
        /// Type 'g' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "g";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Division2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Division2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '7' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "7";
        
        /// <summary>
        /// Type 'l' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "l";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Division3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class Division3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'o' in 'textBoxNum1' text box
        /// </summary>
        public string UITextBoxNum1EditText = "o";
        
        /// <summary>
        /// Type '4' in 'textBoxNum2' text box
        /// </summary>
        public string UITextBoxNum2EditText = "4";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UILab6Window : WinWindow
    {
        
        public UILab6Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Lab6";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public UITextBoxNum1Window UITextBoxNum1Window
        {
            get
            {
                if ((this.mUITextBoxNum1Window == null))
                {
                    this.mUITextBoxNum1Window = new UITextBoxNum1Window(this);
                }
                return this.mUITextBoxNum1Window;
            }
        }
        
        public UITextBoxNum2Window UITextBoxNum2Window
        {
            get
            {
                if ((this.mUITextBoxNum2Window == null))
                {
                    this.mUITextBoxNum2Window = new UITextBoxNum2Window(this);
                }
                return this.mUITextBoxNum2Window;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITextBoxResultWindow UITextBoxResultWindow
        {
            get
            {
                if ((this.mUITextBoxResultWindow == null))
                {
                    this.mUITextBoxResultWindow = new UITextBoxResultWindow(this);
                }
                return this.mUITextBoxResultWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        #endregion
        
        #region Fields
        private UITextBoxNum1Window mUITextBoxNum1Window;
        
        private UITextBoxNum2Window mUITextBoxNum2Window;
        
        private UIItemWindow mUIItemWindow;
        
        private UITextBoxResultWindow mUITextBoxResultWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UITextBoxNum1Window : WinWindow
    {
        
        public UITextBoxNum1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxNum1";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxNum1Edit
        {
            get
            {
                if ((this.mUITextBoxNum1Edit == null))
                {
                    this.mUITextBoxNum1Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBoxNum1Edit.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUITextBoxNum1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxNum1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UITextBoxNum2Window : WinWindow
    {
        
        public UITextBoxNum2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxNum2";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxNum2Edit
        {
            get
            {
                if ((this.mUITextBoxNum2Edit == null))
                {
                    this.mUITextBoxNum2Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBoxNum2Edit.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUITextBoxNum2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxNum2Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonAdd";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "+";
                    this.mUIItemButton.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UITextBoxResultWindow : WinWindow
    {
        
        public UITextBoxResultWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxResult";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxResultEdit
        {
            get
            {
                if ((this.mUITextBoxResultEdit == null))
                {
                    this.mUITextBoxResultEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBoxResultEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Liczba2";
                    this.mUITextBoxResultEdit.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUITextBoxResultEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxResultEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonSub";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "-";
                    this.mUIItemButton.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonMult";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "*";
                    this.mUIItemButton.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonDiv";
            this.WindowTitles.Add("Lab6");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "/";
                    this.mUIItemButton.WindowTitles.Add("Lab6");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
}
